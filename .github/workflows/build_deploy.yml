name: build and deploy code

on: [push, pull_request]

jobs:
  build:
    environment:
      name: fastapi-testing
    env:
      DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
      DATABASE_PWD: ${{secrets.DATABASE_PWD}}
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
      TOKEN_PWD: ${{secrets.TOKEN_PWD}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRE: ${{secrets.ACCESS_TOKEN_EXPIRE}}
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{secrets.DATABASE_PWD}}
          POSTGRES_DB: ${{secrets.DATABASE_NAME}}_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    runs-on: ubuntu-latest
    steps:
      - name: pulling git repo
        uses: actions/checkout@v2
      - name: install python version 3.11
        uses: actions/setup-python@v2
        with:
          python-version: "3.11"
      - name: update pip
        run: python -m pip install --upgrade pip
      - name: insatlling all dependencies
        run: pip install -r requirements.txt
      - name: run tests with pytest
        run: |
          pip install pytest
          pytest
      # - name: Login to Docker Hub
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ secrets.DOCKER_HUB_USERNAME }}
      #     password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      # - name: Set up Docker Buildx
      #   id: buildx
      #   uses: docker/setup-buildx-action@v1

      # - name: Build and push
      #   id: docker_build
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: ./
      #     file: ./Dockerfile 
      #     builder: ${{ steps.buildx.outputs.name }}
      #     push: true
      #     tags: ${{ secrets.DOCKER_HUB_USERNAME }}/fastapi:latest_github
      #     cache-from: type=local,src=/tmp/.buildx-cache
      #     cache-to: type=local,dest=/tmp/.buildx-cache
      # - name: Image digest
      #   run: echo ${{ steps.docker_build.outputs.digest }}
      
  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    environment:
      name: fastapi-production
    env:
      PROD_USERNAME: ${{secrets.PROD_USERNAME}}
      PROD_HOST: ${{secrets.PROD_HOST}}
      PROD_KEY: ${{secrets.PROD_KEY}}

    steps:
      - name: deploy to ubuntu server on gcp
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.PROD_HOST}}
          username: ${{secrets.PROD_USERNAME}}
          key: ${{secrets.PROD_KEY}}
          script: |
            cd fastapi/source/
            git pull
            sudo systemctl restart fastapi


      
